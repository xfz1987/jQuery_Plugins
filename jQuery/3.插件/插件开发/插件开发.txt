 * 开发插件：
   * 概述：
     * jQuery提供了很多的插件供我们使用
       * 问题：
         * 我们所要实现的功能并不需要那么多的功能
	 * 使用的第三方插件,本身都比较强大
	 * 一般第三方插件的体积都不小
	 * 我们一个Web应用开发,会使用多个jQuery插件
	 * 导致我们的Web应用体积过大
     * 根据我们自己的需求,定制自己的jQuery的插件
       * 自定义插件使用上没有任何问题(自己写的)
       * 每个功能相对来讲比较单一(体积小)
       * 完成各个功能之间的整合
     * 自定义插件的好处:
       * 整合功能模块
       * 维护或升级可控
       * 插件体积小
       * 没有插件之间的冲突(版本)
   * jQuery的插件种类:
     * 全局函数插件
       * 全局函数 - $.each(obj,function(){})
       * 例如目前开发了一款全局函数插件myp.js
         * 自定义全局函数插件的方法调用:$.sayMe()
     * 对象函数插件
       * 对象函数 - $(expr).each(function(){})
       * 例如开发一款对象函数插件myp.js
         * 自定义对象函数插件的方法调用:$().sayMe()
     * 选择器插件(很少出现)
       * jQuery本身提供很多的选择器
       * 根据jQuery的插件机制,继续扩展jQuery的插件
       * 举例:XPath插件
         * 作用:用于解析XML文件
	 * jQuery官方插件(官方团队出品)
   * jQuery的插件机制：
     * 全局函数插件
       * jQuery.extend(object)
     * 对象函数插件
       * jQuery.fn.extend(object)
   * 插件的使用：
     * 使用插件提供的方法时,与使用jQuery本身提供的方法没有不一样的
     * 所谓的插件就是根据jQuery提供的机制,为jQuery来扩展方法
   * 全局函数插件与对象函数插件的区别：
     * 全局函数插件
       * jQuery.extend()
       * $.插件方法()
       * 一般用于与HTML页面无关
     * 对象函数插件
       * jQuery.fn.extend()
       * $(expr).插件方法()
       * 一般用于与HTML页面有关
 * 
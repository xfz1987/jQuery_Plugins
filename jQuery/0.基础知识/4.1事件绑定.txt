一、各种常用事件(不介绍，查看文档)

二、页面载入
    $(document).ready(function(){}); ~~ window.onload = function(){};
    或 $().ready(function(){});
    或 $(function(){});  ---这个方式好---
    或 jQuery(function($) {// 你可以在这里继续使用$作为别名});

    注意:ready()与onload的区别:
       ①ready()可以简写，而onload没有
       ②ready()执行效率较高,等待加载完毕时间短，原因为④
       ③ready()允许在一个HTML页面中出现多个，而onload只允许出现一次
       ④ready()在HTML页面的元素、属性和文本加载完毕后再执行代码
         onload在页面中的所有内容全部加载完毕后再执行代码

三、事件处理
   1.事件绑定
     bind(事件名称(一个或多个用空格分开),[绑定事件所需要的数据（可选）],fn);
     【多事件绑定】
     bind({
	click: function(){},
        mouseenter: function(){}
     });

   2.事件解绑（一般不用）
     unbind([事件名称(一个或多个用空格分开)],[fn]);//两个参数都可选

   3.绑定一个一次性的事件处理函数
     one(事件名称(一个或多个用空格分开),[绑定事件所需要的数据（可选）],fn)
     【用法同bind】

   4.【了解】模拟事件(它是行为)，效果没有区别
     trigger()
     click() ~ trigger("click")

   5.tiggerHandler:看文档
    
    tiggerHandler与trigger类似，但有以下三个主要区别： 

    * 第一，他不会触发浏览器默认事件。 

    * 第二，只触发jQuery对象集合中第一个元素的事件处理函数。 

    * 第三，这个方法的返回的是事件处理函数的返回值，而不是据有可链性的jQuery对象。
            此外，如果最开始的jQuery对象集合为空，则这个方法返回 undefined 。



  
四、事件委派
  1.live(事件名称(一个或多个用空格分开),[绑定事件所需要的数据（可选）],fn);  
    jQuery 给所有匹配的元素附加一个事件处理函数，即使这个元素是以后再添加进来的也有效。
    这个方法是基本是的 .bind() 方法的一个变体。
    使用 .bind() 时，选择器匹配的元素会附加一个事件处理函数，而以后再添加的元素则不会有。
    为此需要再使用一次 .bind() 才行
    
  
  2.die([事件名称(一个或多个用空格分开)],[fn]);//两个参数都可选
    如果不带参数，则所有绑定的live事件都会被移除。 
    你可以解除用live注册的自定义事件。 
    如果提供了type参数，那么会移除对应的live事件。 
    如果也指定了第二个参数function,则只移出指定的事件处理函数。



五、事件切换
   1.悬停（移入、移除切换）事件
     hover(移入fn,移出fn2) : 不用绑定事件mouseover和mouseout了
     例: somejQuery.hover(function(){//移入的逻辑},function(){//移出的逻辑});
       
   2.点击轮询事件，当最后一个fn执行完毕后，再次点击又回到第一个fn
     toggle(fn1,fn2,fn3...,fnN);  （新版本已废除）
     例如:图片轮询操作

六、停止事件冒泡
    方式一:function(){//do somthing; event.stopPropagation();}
    方式二:function(){//do somthing; return false;}

七、阻止默认行为
    方式一:function(){//do somthing; event.preventDefault();}
    方式二:function(){//do somthing; return false;}



   